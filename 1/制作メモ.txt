自分がどんな順序でどこを書いたか記録する




【グローバルナビゲーション編】

-1,デザインをイメージとして作った　フォルダ構成をした

0,h1　見出しを使いCSSで中央ぞろえして、googleフォントを使うとこまではできた

1,まずグローバルナビゲーションを作る
　　・ナビゲーションであることを示す「nav」を使い、その下に順不同リストなので「ul」を使う

2,要素を、つまりナビゲーションを等間隔でそろえるため、CSSで[justify-content]プロパティ
　を使い、値に[space-around]を指定する。このとき、navとulの子孫セレクタとして
　指定する

3.2を行おうとしたができなかった。原因はulがリストにはなっているがそれぞれ個別のものとして
　認識されていなかったから。解決するためリストの各要素をdivで囲った

 ★レイアウトの原因を探るときは、余白を指定して領域を作り、
　 そこに[background]で色を付けるといい

4.かこったら縦並びになったため、CSSでレイアウトを調節する。
　段組みレイアウトで、かつ横並びにしたいためcSSで[display:flex]を使う

5.失敗しまくった。何度やってもグローバルナビゲーションのリストが一塊になる。とおもったら、余白
　の設定をulセレクタにしてた。各リスト(liタグ)に対してやらないと意味なかった。
　あとdivで囲ったけど、リストだから普通に「li」タグでよかった。

6.とりあえず整理する。目印としてつけていた背景色を消し、リストマーカーが邪魔なのでCSSで
　「list-style-type:none」を指定しマーカーを消す。

7.リストが等間隔では見にくいので、[space-around]から中央ぞろえの[center]に変更する
　さらにグローバルナビゲーションの文字が小さいからCSSで[font-size]を使う。この時大きさは
　相対単位、%で指定する。130%にした。

8.グロナビの各要素にリンクを指定する。[li]の内側に[a href]を記述し、[="リンク先.html"]という感じ。
　今回リンク先、つまりグロナビの要素たちは、トップページと同じ階層に置く
　そのため、まずやることはグロナビ要素の各htmlファイルの作成
　
9.リンクは貼れたから、ここまででひと段落。今までに書いたのは各ページ共通の内容だから、とりあえず各htmlファイルに
　コピペする。タイトルだけ、各ページに合わせて変える。すると各ページが文字化けしたのでutf-8で読み込んどく
　★どう考えてもコピペする前にコード変更保存しておくべき



　【GitHubに挙げてみる編】

1.まず当然だがgithubにログインする。[git]という無料のオープンソース管理システムをダウンロードする必要がある。

2.ダウンロード完了。とりあえずgithubで新しいリポジトリを作った。
　次にプログラムを作ったフォルダまで移動し、（power shell）以下を入力した
git init
git add .
git commit -m "初回コミット"
git branch -M main
git remote add origin https://github.com/あなたのユーザー名/portfolio.git
git push -u origin main

3.githubのリポジトリへ行き、setting pages source








